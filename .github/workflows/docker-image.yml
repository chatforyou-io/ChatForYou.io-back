name: Docker CI/CD

on:
  push:
    branches: [ "master", "infra/cicd-test" ]
#  pull_request:
#    branches: [ "master" ]

jobs:
  deploy:
    name: Build And Deploy K8S
    environment: chatforyou-back-env # 환경 지정
    runs-on: ubuntu-latest
    env:
      KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}
      IMAGE_REPO: ${{ secrets.IMAGE_REPO }}
      K8S_NAMESPACE: chatforyou-io # Kubernetes 네임스페이스
      DEPLOYMENT_NAME: chatforyou-io # Deployment 이름

    steps:
      # 1. 코드 체크아웃
      - name: Checkout code
        uses: actions/checkout@v2

      # 2. Kubeconfig 설정
      - name: Configure Kubeconfig
        run: |
          mkdir -p ${HOME}/.kube
          echo "${KUBE_CONFIG}" | base64 --decode > ${HOME}/.kube/config
          export KUBECONFIG=${HOME}/.kube/config

      # 3. TIMESTAMP 생성 (한국 시간으로)
      - name: Generate TIMESTAMP in KST
        id: timestamp
        run: |
          export TZ=Asia/Seoul
          echo "TIMESTAMP=$(date -d "${{ github.event.head_commit.timestamp }}" '+%Y%m%d%H%M%S')" >> $GITHUB_ENV

      # 5. Docker 이미지 빌드 및 태그
      - name: Build Docker Image
        run: |
          docker build --file Dockerfile -t ghcr.io/${{ github.repository_owner }}/chatforyou-io-backend:${{ env.TIMESTAMP }} .

      # 6. Docker 이미지 푸시 (GitHub Container Registry)
      - name: Push Docker Image to GitHub Packages
        run: |
          echo "${{ secrets.GIT_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
          docker push ghcr.io/${{ github.repository_owner }}/chatforyou-io:${{ env.TIMESTAMP }}

      # 7. Kubernetes 배포
      - name: Deploy to Kubernetes
        run: |
          kubectl set image deployment/$DEPLOYMENT_NAME \
            chatforyou-container=$IMAGE_REPO:${{ env.TIMESTAMP }} \
            -n $K8S_NAMESPACE
          kubectl rollout status deployment/$DEPLOYMENT_NAME -n $K8S_NAMESPACE